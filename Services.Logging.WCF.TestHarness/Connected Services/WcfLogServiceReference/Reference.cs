//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Services.Logging.WCF.TestHarness.WcfLogServiceReference
{
    using System;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LogToDatabaseRequest", Namespace = "http://schemas.datacontract.org/2004/07/Logging.WCF.Models")]
    [System.SerializableAttribute()]
    public partial class LogToDatabaseRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.Logging.WCF.TestHarness.WcfLogServiceReference.LoggingEventDto LoggingEventDtoField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.Logging.WCF.TestHarness.WcfLogServiceReference.LoggingEventDto LoggingEventDto
        {
            get
            {
                return this.LoggingEventDtoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LoggingEventDtoField, value) != true))
                {
                    this.LoggingEventDtoField = value;
                    this.RaisePropertyChanged("LoggingEventDto");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LoggingEventDto", Namespace = "http://schemas.datacontract.org/2004/07/Logging.WCF.Models.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Exception))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.Logging.WCF.TestHarness.WcfLogServiceReference.LocationInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.Logging.WCF.TestHarness.WcfLogServiceReference.StackFrameItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.Logging.WCF.TestHarness.WcfLogServiceReference.StackFrameItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.Logging.WCF.TestHarness.WcfLogServiceReference.MethodItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.Logging.WCF.TestHarness.WcfLogServiceReference.LoggingEventData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.Logging.WCF.TestHarness.WcfLogServiceReference.Level))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<object, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.Logging.WCF.TestHarness.WcfLogServiceReference.LogToDatabaseRequest))]
    public partial class LoggingEventDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionObjectField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionStringField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentityField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.Logging.WCF.TestHarness.WcfLogServiceReference.LocationInfo LocationInformationField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggerNameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.Logging.WCF.TestHarness.WcfLogServiceReference.LoggingEventData LoggingEventDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object MessageObjectField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<object, object> PropertiesField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RenderedMessageField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object RepositoryField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThreadNameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName
        {
            get
            {
                return this.DisplayNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true))
                {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain
        {
            get
            {
                return this.DomainField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DomainField, value) != true))
                {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionObject
        {
            get
            {
                return this.ExceptionObjectField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ExceptionObjectField, value) != true))
                {
                    this.ExceptionObjectField = value;
                    this.RaisePropertyChanged("ExceptionObject");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionString
        {
            get
            {
                return this.ExceptionStringField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ExceptionStringField, value) != true))
                {
                    this.ExceptionStringField = value;
                    this.RaisePropertyChanged("ExceptionString");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identity
        {
            get
            {
                return this.IdentityField;
            }
            set
            {
                if ((object.ReferenceEquals(this.IdentityField, value) != true))
                {
                    this.IdentityField = value;
                    this.RaisePropertyChanged("Identity");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.Logging.WCF.TestHarness.WcfLogServiceReference.LocationInfo LocationInformation
        {
            get
            {
                return this.LocationInformationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LocationInformationField, value) != true))
                {
                    this.LocationInformationField = value;
                    this.RaisePropertyChanged("LocationInformation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggerName
        {
            get
            {
                return this.LoggerNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LoggerNameField, value) != true))
                {
                    this.LoggerNameField = value;
                    this.RaisePropertyChanged("LoggerName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.Logging.WCF.TestHarness.WcfLogServiceReference.LoggingEventData LoggingEventData
        {
            get
            {
                return this.LoggingEventDataField;
            }
            set
            {
                if ((this.LoggingEventDataField.Equals(value) != true))
                {
                    this.LoggingEventDataField = value;
                    this.RaisePropertyChanged("LoggingEventData");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object MessageObject
        {
            get
            {
                return this.MessageObjectField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageObjectField, value) != true))
                {
                    this.MessageObjectField = value;
                    this.RaisePropertyChanged("MessageObject");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<object, object> Properties
        {
            get
            {
                return this.PropertiesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true))
                {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RenderedMessage
        {
            get
            {
                return this.RenderedMessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RenderedMessageField, value) != true))
                {
                    this.RenderedMessageField = value;
                    this.RaisePropertyChanged("RenderedMessage");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Repository
        {
            get
            {
                return this.RepositoryField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RepositoryField, value) != true))
                {
                    this.RepositoryField = value;
                    this.RaisePropertyChanged("Repository");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThreadName
        {
            get
            {
                return this.ThreadNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ThreadNameField, value) != true))
                {
                    this.ThreadNameField = value;
                    this.RaisePropertyChanged("ThreadName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp
        {
            get
            {
                return this.TimeStampField;
            }
            set
            {
                if ((this.TimeStampField.Equals(value) != true))
                {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UserNameField, value) != true))
                {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LocationInfo", Namespace = "http://schemas.datacontract.org/2004/07/log4net.Core")]
    [System.SerializableAttribute()]
    public partial class LocationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string m_classNameField;

        private string m_fileNameField;

        private string m_fullInfoField;

        private string m_lineNumberField;

        private string m_methodNameField;

        private Services.Logging.WCF.TestHarness.WcfLogServiceReference.StackFrameItem[] m_stackFramesField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string m_className
        {
            get
            {
                return this.m_classNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_classNameField, value) != true))
                {
                    this.m_classNameField = value;
                    this.RaisePropertyChanged("m_className");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string m_fileName
        {
            get
            {
                return this.m_fileNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_fileNameField, value) != true))
                {
                    this.m_fileNameField = value;
                    this.RaisePropertyChanged("m_fileName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string m_fullInfo
        {
            get
            {
                return this.m_fullInfoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_fullInfoField, value) != true))
                {
                    this.m_fullInfoField = value;
                    this.RaisePropertyChanged("m_fullInfo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string m_lineNumber
        {
            get
            {
                return this.m_lineNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_lineNumberField, value) != true))
                {
                    this.m_lineNumberField = value;
                    this.RaisePropertyChanged("m_lineNumber");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string m_methodName
        {
            get
            {
                return this.m_methodNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_methodNameField, value) != true))
                {
                    this.m_methodNameField = value;
                    this.RaisePropertyChanged("m_methodName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Services.Logging.WCF.TestHarness.WcfLogServiceReference.StackFrameItem[] m_stackFrames
        {
            get
            {
                return this.m_stackFramesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_stackFramesField, value) != true))
                {
                    this.m_stackFramesField = value;
                    this.RaisePropertyChanged("m_stackFrames");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LoggingEventData", Namespace = "http://schemas.datacontract.org/2004/07/log4net.Core")]
    [System.SerializableAttribute()]
    public partial struct LoggingEventData : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionStringField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentityField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.Logging.WCF.TestHarness.WcfLogServiceReference.Level LevelField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.Logging.WCF.TestHarness.WcfLogServiceReference.LocationInfo LocationInfoField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggerNameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<object, object> PropertiesField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThreadNameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampUtcField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain
        {
            get
            {
                return this.DomainField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DomainField, value) != true))
                {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionString
        {
            get
            {
                return this.ExceptionStringField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ExceptionStringField, value) != true))
                {
                    this.ExceptionStringField = value;
                    this.RaisePropertyChanged("ExceptionString");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identity
        {
            get
            {
                return this.IdentityField;
            }
            set
            {
                if ((object.ReferenceEquals(this.IdentityField, value) != true))
                {
                    this.IdentityField = value;
                    this.RaisePropertyChanged("Identity");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.Logging.WCF.TestHarness.WcfLogServiceReference.Level Level
        {
            get
            {
                return this.LevelField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LevelField, value) != true))
                {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.Logging.WCF.TestHarness.WcfLogServiceReference.LocationInfo LocationInfo
        {
            get
            {
                return this.LocationInfoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LocationInfoField, value) != true))
                {
                    this.LocationInfoField = value;
                    this.RaisePropertyChanged("LocationInfo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggerName
        {
            get
            {
                return this.LoggerNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LoggerNameField, value) != true))
                {
                    this.LoggerNameField = value;
                    this.RaisePropertyChanged("LoggerName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageField, value) != true))
                {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<object, object> Properties
        {
            get
            {
                return this.PropertiesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true))
                {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThreadName
        {
            get
            {
                return this.ThreadNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ThreadNameField, value) != true))
                {
                    this.ThreadNameField = value;
                    this.RaisePropertyChanged("ThreadName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp
        {
            get
            {
                return this.TimeStampField;
            }
            set
            {
                if ((this.TimeStampField.Equals(value) != true))
                {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStampUtc
        {
            get
            {
                return this.TimeStampUtcField;
            }
            set
            {
                if ((this.TimeStampUtcField.Equals(value) != true))
                {
                    this.TimeStampUtcField = value;
                    this.RaisePropertyChanged("TimeStampUtc");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UserNameField, value) != true))
                {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StackFrameItem", Namespace = "http://schemas.datacontract.org/2004/07/log4net.Core")]
    [System.SerializableAttribute()]
    public partial class StackFrameItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string m_classNameField;

        private string m_fileNameField;

        private string m_fullInfoField;

        private string m_lineNumberField;

        private Services.Logging.WCF.TestHarness.WcfLogServiceReference.MethodItem m_methodField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string m_className
        {
            get
            {
                return this.m_classNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_classNameField, value) != true))
                {
                    this.m_classNameField = value;
                    this.RaisePropertyChanged("m_className");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string m_fileName
        {
            get
            {
                return this.m_fileNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_fileNameField, value) != true))
                {
                    this.m_fileNameField = value;
                    this.RaisePropertyChanged("m_fileName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string m_fullInfo
        {
            get
            {
                return this.m_fullInfoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_fullInfoField, value) != true))
                {
                    this.m_fullInfoField = value;
                    this.RaisePropertyChanged("m_fullInfo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string m_lineNumber
        {
            get
            {
                return this.m_lineNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_lineNumberField, value) != true))
                {
                    this.m_lineNumberField = value;
                    this.RaisePropertyChanged("m_lineNumber");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Services.Logging.WCF.TestHarness.WcfLogServiceReference.MethodItem m_method
        {
            get
            {
                return this.m_methodField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_methodField, value) != true))
                {
                    this.m_methodField = value;
                    this.RaisePropertyChanged("m_method");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "MethodItem", Namespace = "http://schemas.datacontract.org/2004/07/log4net.Core")]
    [System.SerializableAttribute()]
    public partial class MethodItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string m_nameField;

        private string[] m_parametersField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string m_name
        {
            get
            {
                return this.m_nameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_nameField, value) != true))
                {
                    this.m_nameField = value;
                    this.RaisePropertyChanged("m_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string[] m_parameters
        {
            get
            {
                return this.m_parametersField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_parametersField, value) != true))
                {
                    this.m_parametersField = value;
                    this.RaisePropertyChanged("m_parameters");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Level", Namespace = "http://schemas.datacontract.org/2004/07/log4net.Core")]
    [System.SerializableAttribute()]
    public partial class Level : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string m_levelDisplayNameField;

        private string m_levelNameField;

        private int m_levelValueField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string m_levelDisplayName
        {
            get
            {
                return this.m_levelDisplayNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_levelDisplayNameField, value) != true))
                {
                    this.m_levelDisplayNameField = value;
                    this.RaisePropertyChanged("m_levelDisplayName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string m_levelName
        {
            get
            {
                return this.m_levelNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.m_levelNameField, value) != true))
                {
                    this.m_levelNameField = value;
                    this.RaisePropertyChanged("m_levelName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int m_levelValue
        {
            get
            {
                return this.m_levelValueField;
            }
            set
            {
                if ((this.m_levelValueField.Equals(value) != true))
                {
                    this.m_levelValueField = value;
                    this.RaisePropertyChanged("m_levelValue");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "WcfLogServiceReference.ILogWcf")]
    public interface ILogWcf
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ILogWcf/AppendToLog", ReplyAction = "http://tempuri.org/ILogWcf/AppendToLogResponse")]
        void AppendToLog(Services.Logging.WCF.TestHarness.WcfLogServiceReference.LogToDatabaseRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ILogWcf/AppendToLog", ReplyAction = "http://tempuri.org/ILogWcf/AppendToLogResponse")]
        System.Threading.Tasks.Task AppendToLogAsync(Services.Logging.WCF.TestHarness.WcfLogServiceReference.LogToDatabaseRequest request);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogWcfChannel : Services.Logging.WCF.TestHarness.WcfLogServiceReference.ILogWcf, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogWcfClient : System.ServiceModel.ClientBase<Services.Logging.WCF.TestHarness.WcfLogServiceReference.ILogWcf>, Services.Logging.WCF.TestHarness.WcfLogServiceReference.ILogWcf
    {

        public LogWcfClient()
        {
        }

        public LogWcfClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public LogWcfClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public LogWcfClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public LogWcfClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public void AppendToLog(Services.Logging.WCF.TestHarness.WcfLogServiceReference.LogToDatabaseRequest request)
        {
            base.Channel.AppendToLog(request);
        }

        public System.Threading.Tasks.Task AppendToLogAsync(Services.Logging.WCF.TestHarness.WcfLogServiceReference.LogToDatabaseRequest request)
        {
            return base.Channel.AppendToLogAsync(request);
        }
    }
}
