@model IdentityProvider.Models.ViewModels.Operations.OperationPagedVm

@using IdentityProvider.UI.Web.MVC5.Extensions
@using PagedList.Mvc

@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_LayOutBSB.cshtml";

    string currentFilter = ViewBag.CurrentFilter;
    string currentSort = ViewBag.CurrentSort;

    if (string.IsNullOrEmpty(currentSort))
    {
        currentSort = "Created_Date_Desc";
    }
}

<script src="~/Scripts/Muuri/muuriWireup.js"></script>
<script src="~/bower_components/moment/min/moment-with-locales.js"></script>


<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

<script>
    var deleteUrl = "/Operation/Delete/";
    var toolTipUrl = '/Operation/Detail';
    var detailUrl = "/Operation/Detail";
    var editUrl = "/Operation/Edit";
    var insertUrl = "/Operation/Insert";

    $(document).ready(function () {

        $('#ShowInactive').val(this.checked);

        $('#ShowInactiveHidden').val(this.checked);

        $('#ShowInactive').change(function () {

            if (this.checked) {
                $(this).prop("checked", true);
                $('#ShowInactive').val(this.checked);
                $('#ShowInactiveHidden').val("true");
            } else {
                $('#ShowInactive').val(this.checked);
                $(this).prop("checked", false);
                $('#ShowInactiveHidden').val("false");
            }
        });
    });

    // Fetch number of active/deleted/inactivated operations from backend to be used in widgets
    $(document).ready(function () {
        $.ajax({
            type: "GET",
            url: "/Operation/FetchInfoOnOperations",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                $("#activeOpsWidget").attr('data-to', response.ActiveItemCount);
                $("#activeOpsWidget").text(response.ActiveItemCount);
                $("#deletedOpsWidget").attr('data-to', response.DeletedItemCount);
                $("#deletedOpsWidget").text(response.DeletedItemCount);
                $("#inactiveOpsWidget").attr('data-to', response.InactiveItemCount);
                $("#inactiveOpsWidget").text(response.InactiveItemCount);
            },
            failure: function (response) {
                alert(response);
            },
            error: function (response) {
                alert(response);
            }
        });
    });

    // Delete item from grid
    $(document).ready(function () {
        $(".deleteDialog").click(function (event) {
            event.preventDefault();
            var color = $(this).data('color');
            var $buttonClicked = $(this);
            var id = $buttonClicked.attr('data-id-value');
            var name = $buttonClicked.attr('data-name');
            itemDelete(id);
        });
    });

    // Item details modal, close modal button
    $('closebtn').on('click',
        function () {
            $('#mdModal').modal('hide');
        });


    $(document).ready(function () {


        $.fn.dataTable.ext.classes.sLengthSelect = 'btn bg-pink';
        $.fn.dataTable.ext.classes.sPageButton = 'btn bg-pink'; // Change Pagination Button Class
        $.fn.dataTable.ext.classes.sPageButtonActive = 'btn bg-pink';


        //// Setup - add a text input to each footer cell
        //$('#SearchResultTable tfoot th').each( function () {
        //    var title = $(this).text();
        //    $(this).html( '<input type="text" placeholder="Search '+title+'" />' );
        //});

        var table = $('#SearchResultTable').DataTable({
            "columnDefs": [
                { "width": "5%", "visible": false, "targets": [0] },                                        // Id
                { "width": "10%", "searchable": false, "orderable": true,  "targets": [1] },                // UpdatedAt
                { "width": "10%", "searchable": false, "orderable": true,  "targets": [2] },                // UserName
                { "width": "10%", "searchable": false, "orderable": true,  "targets": [3] },                // Action
                { "width": "10%", "searchable": false, "orderable": true,  "targets": [4] },                // TableName
                { "width": "20%", "searchable": false, "orderable": true,  "targets": [5] },                // OldData
                { "width": "20%", "searchable": false, "orderable": true,  "targets": [6] },                // NewData
                { "className": "text-center custom-middle-align", "targets": [0, 1, 2, 3, 4, 5, 6] }
            ],
            select: {
                style: 'multi'
            },
            "autoWidth": false,
            "keys": true,
            "fixedHeader": true,
            "sortable": true,
            processing: true,
            "serverSide": true,
            rowReorder: {
                selector: 'td:nth-child(2)'
            },
            responsive: true,
            "pageLength": 10,
            "pagingType": "full_numbers",
            "ajax": {
                url: "@Url.Action("AuditTrailDatatables" , "AuditTrail")",
                type: 'POST',
                datatype: "json",
                "data": function(data) {
                    data.from = $('#min-date').val();
                    data.to = $('#max-date').val();
                }
            },
            "language": {
                "search": "",
                "searchPlaceholder": "Search...",
                loadingRecords: '<div style="width:100%; z-index: 11000 !important; text-align: center;"><img src="http://www.snacklocal.com/images/ajaxload.gif"></div>',
                processing: '<div style="width:100%; z-index: 11000 !important; text-align: center;"><img src="http://www.snacklocal.com/images/ajaxload.gif"></div>'
            },
            "columns": [
                { "data": "Id", "name": "Id", "autoWidth": false },
                {
                    "data": "UpdatedAt", "name": "UpdatedAt", "autoWidth": false
                    , type: "datetime"
                    , render: function (data, type, row) {
                        return moment(data).format('DD.MM.YYYY HH:MM:SS');}
                },
                { "data": "UserName", "name": "UserName", "autoWidth": false },
                { "data": "Action", "name": "Action", "autoWidth": false },
                { "data": "TableName", "name": "TableName", "autoWidth": false },
                { "data": "OldData", "name": "OldData", "autoWidth": false },
                { "data": "NewData", "name": "NewData", "autoWidth": false }
            ]
        });



        //table.columns().every( function () {
        //    var that = this;

        //    $('input', this.footer()).on('keydown', function (e) {

        //        if ( that.search() !== this.value ) {
        //            that.search( this.value ).draw();
        //        }

        //    } );
        //});

        //// Bootstrap datepicker
        //$('.input-daterange input').each(function() {
        //    $(this).datepicker({
        //        todayBtn: "linked",
        //        clearBtn: true,
        //        calendarWeeks: true,
        //        autoclose: true,
        //        todayHighlight: true
        //    });
        ////'clearDates'
        //});

        $(function() {
            $('input[name="datetimes"]').daterangepicker({
                timePicker: true,
                startDate: moment().startOf('hour'),
                endDate: moment().startOf('hour').add(24, 'hour'),
                locale: {
                    format: 'DD.MM.YYYY HH:mm:SS'

                },
                "minYear": 2000,
                "maxYear": 2050,
                "timePicker24Hour": true,
                "timePickerSeconds": true
            });
        });


        //// Extend dataTables search
        //$.fn.dataTable.ext.search.push(
        //    function(settings, data, dataIndex) {
        //        var min = $('#min-date').val();
        //        var max = $('#max-date').val();
        //        var createdAt = data[2] || 0; // Our date column in the table

        //        if (
        //            (min == "" || max == "") ||
        //                (moment(createdAt).isSameOrAfter(min) && moment(createdAt).isSameOrBefore(max))
        //        ) {
        //            return true;
        //        }
        //        return false;
        //    }
        //);

        // Re-draw the table when the a date range filter changes
        $('input[name="datetimes"]').on('apply.daterangepicker', function(ev, picker) {
            console.log(picker.startDate.format('YYYY-MM-DD HH:mm:SS'));
            console.log(picker.endDate.format('YYYY-MM-DD HH:mm:SS'));
            table.draw();
        });

        $('#my-table_filter').hide();


    });



    //$('#submitSearch').click(function () {
    //    $('#searchAndPageSizeForm').submit();
    //});

    //$(function () {
    //    $("#searchAndPageSizeForm").on("submit", function (event) {
    //        var $this = $(this);

    //        event.preventDefault();

    //        // $('#submitSearch').attr('disabled', 'disabled');

    //        var dataToPost = $(this).serialize({ checkboxesAsBools: true });
    //        alert(dataToPost);
    //        $.ajax({
    //            type: $this.attr('method'),
    //            url: $this.attr('action'),
    //            data: dataToPost,
    //            success: function (response) {

    //                if (response.Success === true) {

    //                }
    //                else {

    //                    if (response.OptimisticConcurrencyError === true) {

    //                    } else {

    //                    }
    //                }

    //                return false;
    //            },
    //            error: function (response) {
    //                swal(
    //                    'Error!',
    //                    'Your item has not been editted. ' + response.ValidationIssues,
    //                    'error'
    //                ).then(function () {
    //                    location.reload();
    //                });
    //            },
    //            complete: function () {
    //                $("#loading").hide();
    //                // $('#btnSubmit').removeAttr('disabled');
    //            }
    //        });
    //    });
    //});

</script>

<div class="container-fluid">

    <div class="block-header">
        <h2>DASHBOARD</h2>
    </div>

    @Html.Partial("Partial/_operationsHeaderPartial" , Model)

    <div class="row">
        <div class="grid">
            <div class="item">
                <div class="item-content">
                    <div class="info-box bg-green hover-expand-effect">
                        <div class="icon">
                            <i class="material-icons">playlist_add_check</i>
                        </div>
                        <div class="content">
                            <div class="text">ACTIVE</div>
                            <div class="number count-to" id="activeOpsWidget" data-from="0" data-to="0" data-speed="15" data-fresh-interval="20">8</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="item">
                <div class="item-content">
                    <div class="info-box bg-orange hover-expand-effect">
                        <div class="icon">
                            <i class="material-icons">playlist_add_check</i>
                        </div>
                        <div class="content">
                            <div class="text">INACTIVE</div>
                            <div class="number count-to" id="inactiveOpsWidget" data-from="0" data-to="0" data-speed="15" data-fresh-interval="20">8</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="item">
                <div class="item-content">
                    <div class="info-box bg-red hover-expand-effect">
                        <div class="icon">
                            <i class="material-icons">playlist_add_check</i>
                        </div>
                        <div class="content">
                            <div class="text">DELETED</div>
                            <div class="number count-to" id="deletedOpsWidget" data-from="0" data-to="0" data-speed="15" data-fresh-interval="20">8</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="item-full-width">
                <div class="card">
                    <div class="item-content">
                        @Html.Partial("../Shared/DragAndDropHandlePartial/_dragAndDropHandlePartial" , Model)
                    </div>

                    <div class="header">
                        <ul class="header-dropdown m-r--5" style="top:10px !important">
                            <li class="dropdown">

                                <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="true">
                                    <i class="material-icons">more_vert</i>
                                </a>

                                <ul class="dropdown-menu pull-right">
                                    <li><a href="javascript:void(0);" class=" waves-effect waves-block">Save current layout</a></li>
                                    <li><a href="javascript:void(0);" class=" waves-effect waves-block">Restore default layout</a></li>
                                    <li><a href="javascript:void(0);" class=" waves-effect waves-block">Refresh</a></li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                    <div class="body container-fluid">
                        @using (Html.BeginForm("OperationsGetAllPaged" , "Operation" , FormMethod.Get , new { id = "searchAndPageSizeForm" }))
                        {
                            <div class="col-xs-10">
                                <div class="form-line" style="margin-left: 5px">
                                    @Html.TextBox("SearchString" , ViewBag.CurrentFilter as string , new { @placeholder = "Search" , @value = ViewBag.CurrentFilter , @data_toggle = "tooltip" , @data_placement = "top" , @title = "" , @data_original_title = "Enter search criteria" })
                                    @Html.ValidationMessage("Search")
                                    <button class="btn bg-purple waves-effect btn-xs" id="submitSearch" style="margin: 1px; margin-bottom: 4px" type="submit" name="submitSearch" data-toggle="tooltip" data-placement="right" title="" data-original-title="Begin search"><i class="material-icons">search</i></button>
                                </div>
                            </div>

                            <input type="hidden" id="ShowInactiveHidden" name="ShowInactive" />

                            <input id="ShowInactive" name="ShowInactive" class="filled-in chk-col-pink" type="checkbox" @(Model.ShowInactive ? "checked" : "")>

                            <label for="ShowInactive">Active</label>

                            <div class="col-xs-2">

                                <div class="form-line" style="float: right; margin-right: 8px">
                                    @Html.DropDownListFor(m => m.PageSize , Model.PageSizeList , new { id = "PageSizeList" , @class = "js-select2-enabled" , @style = "padding: 5px; width: 55px" })
                                </div>

                            </div>

                            <div class="body" style="width: 100% !important">

                                <div class="col-xs-2 form-line" style="padding-left:0 !important">
                                    <button type="submit" class="btn bg-purple waves-effect btn-xs createNewDialog" data-toggle="tooltip" data-placement="auto top" title="" data-original-title="Create a new operation">
                                        <i class="material-icons">create</i> <span>
                                            Create
                                        </span>
                                    </button>
                                </div>

                                <table class="table table-striped table-light table-condensed my-fixed-layout-table" Id="operationsGrid">
                                    <thead>
                                        <tr>
                                            <th style="">
                                                <span data-toggle="tooltip" data-placement="auto top" title="" data-original-title="Sort by name">
                                                    @Html.ActionLink("Name" , "OperationsGetAllPaged" , Request.QueryString.ToRouteValueDictionary("sortOrder" , ( string ) ViewBag.NameSortParam))
                                                    @Html.SortIdentifier(currentSort , "Name")
                                                </span>
                                            </th>
                                            <th style="">
                                                <span data-toggle="tooltip" data-placement="auto top" title="" data-original-title="Sort by description">
                                                    @Html.ActionLink("Description" , "OperationsGetAllPaged" , Request.QueryString.ToRouteValueDictionary("sortOrder" , ( string ) ViewBag.DescriptionSortParam))
                                                    @Html.SortIdentifier(currentSort , "Description")
                                                </span>
                                            </th>
                                            <th style="width:50px">
                                                <span style="text-align: left;" data-toggle="tooltip" data-placement="top" title="" data-original-title="Sort by active status">
                                                    @Html.ActionLink("Active" , "OperationsGetAllPaged" , Request.QueryString.ToRouteValueDictionary("sortOrder" , ( string ) ViewBag.ActiveSortParam))
                                                    @Html.SortIdentifier(currentSort , "Active")
                                                </span>
                                            </th>
                                            <th style="width:148px">
                                                <span style="text-align: left" data-toggle="tooltip" data-placement="top" title="" data-original-title="Sort by created date">
                                                    @Html.ActionLink("Created_Date" , "OperationsGetAllPaged" , Request.QueryString.ToRouteValueDictionary("sortOrder" , ( string ) ViewBag.DateCreatedSortParam))
                                                    @Html.SortIdentifier(currentSort , "Created_Date")
                                                </span>
                                            </th>
                                            <th style="width:148px">
                                                <span style="text-align: left" data-toggle="tooltip" data-placement="top" title="" data-original-title="Sort by modified date">
                                                    @Html.ActionLink("Modified_Date" , "OperationsGetAllPaged" , Request.QueryString.ToRouteValueDictionary("sortOrder" , ( string ) ViewBag.DateModifiedSortParam))
                                                    @Html.SortIdentifier(currentSort , "Modified_Date")
                                                </span>
                                            </th>
                                            <th style="width:190px">
                                                <span style="text-align: left" data-toggle="tooltip" data-placement="top" title="" data-original-title="Actions available on selected item">
                                                    <span>
                                                        Actions
                                                    </span>
                                                    <i class="material-icons" style="font-size: 1em; color: purple" , title="Actions">build</i>
                                                </span>
                                            </th>
                                        </tr>
                                    </thead>

                                    @Html.Partial("Partial/_operationsPartial" , Model)

                                </table>
                            </div>
                        }
                    </div>
                    <div class="footer">
                        @if (Model.Operations.PageCount > 1)
                        {
                            <div class="pager">
                                @Html.PagedListPager(Model.Operations , page => Url.Action("OperationsGetAllPaged" , new
                                {
                                    page ,
                                    sortOrder = Model.SortOrder,
                                    currentFilter = Model.SearchString,
                                    pageNumber = page ,
                                    pageSize = Model.PageSize,
                                    ShowInactive = Model.ShowInactive
                                }))
                                Page @(Model.Operations.PageCount < Model.Operations.PageNumber ? 0 : Model.Operations.PageNumber) of @Model.Operations.PageCount
                            </div>
                        }
                        else
                        {
                            <div><hr /></div>
                        }
                    </div>

                </div>
            </div>

            <!-- ================ -->
            <!-- Audit trail card -->
            <!-- ================ -->
            <div class="item-full-width">
                <div class="card">

                    @Html.Partial("../Shared/DragAndDropHandlePartial/_dragAndDropHandlePartial" , Model)

                    <div class="header">
                        <ul class="header-dropdown m-r--5" style="top:10px !important">
                            <li class="dropdown">

                                <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="true">
                                    <i class="material-icons">more_vert</i>
                                </a>

                                <ul class="dropdown-menu pull-right">
                                    <li><a href="javascript:void(0);" class=" waves-effect waves-block">Save current layout</a></li>
                                    <li><a href="javascript:void(0);" class=" waves-effect waves-block">Restore default layout</a></li>
                                    <li><a href="javascript:void(0);" class=" waves-effect waves-block">Refresh</a></li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                    <div class="header cool-text">
                        <em style="font-size: 1.7em">
                            Audit trail
                        </em>
                        <em style="font-size: 0.9em">
                            <small>View the audit trail</small>
                        </em>
                    </div>

                    <!-- Audit trail pickers -->
                    
                    <input type="text" name="datetimes" />
                    

                    @*<div class="container">
                        <div class="col-md-2">
                            <div class="input-group input-daterange">

                                <input type="text" id="min-date" class="form-control date-range-filter" data-date-format="dd.MM.YYYY" placeholder="From:">

                                <div class="input-group-addon">to</div>

                                <input type="text" id="max-date" class="form-control date-range-filter" data-date-format="dd.MM.YYYY" placeholder="To:">

                            </div>
                        </div>
                    </div>*@
                    <!-- #END# Audit trail pickers -->



                    <div style="width:90%; margin:0 auto;">
                        <table id="SearchResultTable" width="100%" class="display table table-striped table-hover">

                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>UpdatedAt</th>
                                    <th>UserName</th>
                                    <th>Action</th>
                                    <th>TableName</th>
                                    <th>OldValue</th>
                                    <th>NewValue</th>
                                </tr>
                            </thead>

                            <tfoot>
                                @*<tr>
                                        <th>UserName</th>
                                        <th>TableName</th>
                                        <th>UpdatedAt</th>
                                        <th>OldValue</th>
                                        <th>NewValue</th>
                                    </tr>*@
                            </tfoot>

                        </table>
                    </div>

                    <div><hr /></div>   <div><hr /></div>


                </div>
            </div>
            <!-- ====================== -->
            <!-- #END# Audit trail card -->
            <!-- ====================== -->
        </div>
        <!-- #END# Muuri grid -->
    </div>
</div>


<div class="modal fade in" id="mdModal" tabindex="-1" role="dialog" style="display: none;">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="largeModalLabel"></h4>
            </div>
            <div class="modal-body">
                @*  guess what, this is where you put your ajax fetched content  *@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-link waves-effect" data-dismiss="modal">CLOSE</button>
            </div>
        </div>
    </div>
</div>

<style>
    .dataTables_processing {
        z-index: 11000 !important;
        padding-top: 1px !important;
    }

    .dataTables_loadingRecords {
        z-index: 11000 !important;
        padding-top: 1px !important;
    }
</style>
