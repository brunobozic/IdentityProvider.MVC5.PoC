@model PagedList.IPagedList<IdentityProvider.Controllers.Controllers.OperationPagedVm>
@using IdentityProvider.UI.Web.MVC5.Extensions
@using PagedList.Mvc

@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_LayOutBSB.cshtml";

    string currentFilter = ViewBag.CurrentFilter;
    string currentSort = ViewBag.CurrentSort;
    if (string.IsNullOrEmpty(currentSort))
    {
        currentSort = "Created_Date_Desc";
    }
}

<script src="~/bower_components/sweetalert2/dist/sweetalert2.all.js"></script>
<link href="~/bower_components/sweetalert2/dist/sweetalert2.css" rel="stylesheet" />
<script src="~/bower_components/sweetalert2/dist/sweetalert2.js"></script>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/makeTableResponsive.js"></script>
<link href="~/Content/MakeTableResponsive.css" rel="stylesheet" />
<script src="~/bower_components/adminbsb-materialdesign/js/pages/ui/tooltips-popovers.js"></script>
<link href="~/Content/popover-overrides.css" rel="stylesheet" />


<style>
    span label p {
        font-family: "Montserrat", sans-serif;
    }

    .cool-text {
        font-family: "Montserrat", sans-serif;
    }

    table {
        table-layout: auto !important;
        border-collapse: collapse !important;
        width: 100% !important;
    }

        table .absorbing-column {
            width: 100% !important;
        }

        table td {
            white-space: nowrap;
        }



    /*table td:last-child {
        width: 9% !important;
    }*/

    .filler {
    }

    .delete {
    }

    hr {
        display: block;
        position: relative;
        padding: 0px !important;
        margin: 25px auto;
        height: 0;
        width: 80%;
        max-height: 0;
        font-size: 1px;
        line-height: 0;
        clear: both;
        border: none;
        border-top: 1px solid white;
        border-bottom: 1px solid white;
    }
</style>

<script>
    function deleteOperation(operationId) {
        swal({
            title: "Are you sure?",
            text: "Are you sure that you want to delete this operation?",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, delete it!",
            confirmButtonColor: "#ec6c62"
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    url: "/Operation/OperationDeleteAsync/",
                    data:
                    {
                        "operationToDelete": operationId
                    },
                    type: "POST",
                    //contentType: "application/json; charset=utf-8",
                    //dataType: "json",
                    success: successFunc,
                    error: errorFunc
                });
                function successFunc(data, status) {

                    swal(
                        'Deleted!',
                        'Your item has been deleted.',
                        'success'
                    );
                }
                function errorFunc() {

                    swal(
                        'Nothing changed!',
                        'Your item has not been deleted.',
                        'failure'
                    );
                }

            } else {
                swal(
                    'Nothing changed!',
                    'Your item has not been deleted.',
                    'failure'
                );
            }
        });
    }
</script>

<div class="container-fluid">

    <div class="block-header"></div>
    <div class="row clearfix">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
            <div class="card">
                <div class="header cool-text">
                    <em style="font-size: 2.7em">
                        Operations
                    </em>
                    <em style="font-size: 0.9em"><small>Create or delete allowed operations</small></em>
                </div>
                <div class="body ">
                    &nbsp;

                    <div style="padding-bottom: 9px; padding-top: 9px">
                        @using (Html.BeginForm("OperationsGetAllPaged" , "Operation" , FormMethod.Get))
            {
                            <div class="form-line">
                                @Html.TextBox("SearchString" , ViewBag.CurrentFilter as string , new { @placeholder = "Search" , @value = ViewBag.CurrentFilter , @data_toggle = "tooltip" , @data_placement = "top" , @title = "" , @data_original_title = "Enter search criteria" })
                                @Html.ValidationMessage("Search")
                                <button class="btn bg-purple waves-effect btn-xs" style="margin: 1px; margin-bottom: 4px" type="submit" name="submit" data-toggle="tooltip" data-placement="right" title="" data-original-title="Begin search"><i class="material-icons">search</i></button>
                            </div>
                        }
                    </div>

                    <table class="table table-striped table-light table-responsive">
                        <thead>
                            <tr>
                                <th>
                                    <span data-toggle="tooltip" data-placement="auto top" title="" data-original-title="Sort by name">
                                        @Html.ActionLink("Name" , "OperationsGetAllPaged" , Request.QueryString.ToRouteValueDictionary("sortOrder" , ( string ) ViewBag.NameSortParam) @*, new { @data_toggle = "tooltip" , @data_container = "body" , @data_placement = " auto top" , @title = "" , @data_original_title = "Sort by name" }*@)
                                        @Html.SortIdentifier(currentSort , "Name")
                                    </span>
                                </th>
                                <th>
                                    <span data-toggle="tooltip" data-placement="auto top" title="" data-original-title="Sort by description">
                                        @Html.ActionLink("Description" , "OperationsGetAllPaged" , Request.QueryString.ToRouteValueDictionary("sortOrder" , ( string ) ViewBag.DescriptionSortParam) @*, new { @data_toggle = "tooltip" , @data_container = "body" , @data_placement = " auto top" , @title = "" , @data_original_title = "Sort by description" }*@)
                                        @Html.SortIdentifier(currentSort , "Description")
                                    </span>
                                </th>
                                <th>
                                    <span style="text-align: left;" data-toggle="tooltip" data-placement="top" title="" data-original-title="Sort by active status">
                                        @Html.ActionLink("Active" , "OperationsGetAllPaged" , Request.QueryString.ToRouteValueDictionary("sortOrder" , ( string ) ViewBag.ActiveSortParam))
                                        @Html.SortIdentifier(currentSort , "Active")
                                    </span>
                                </th>
                                @*<th style="text-align: center;" data-toggle="tooltip" data-placement="top" title="" data-original-title="Sort by deleted status">
                                        @Html.ActionLink("Deleted" , "OperationsGetAllPaged" , Request.QueryString.ToRouteValueDictionary("sortOrder" , ( string ) ViewBag.DeletedSortParam))
                                        @Html.SortIdentifier(currentSort , "Deleted")
                                    </th>*@
                                <th>
                                    <span style="text-align: left" data-toggle="tooltip" data-placement="top" title="" data-original-title="Sort by created date">
                                        @Html.ActionLink("Created_Date" , "OperationsGetAllPaged" , Request.QueryString.ToRouteValueDictionary("sortOrder" , ( string ) ViewBag.DateCreatedSortParam))
                                        @Html.SortIdentifier(currentSort , "Created_Date")
                                    </span>
                                </th>
                                <th>
                                    <span style="text-align: left" data-toggle="tooltip" data-placement="top" title="" data-original-title="Sort by modified date">
                                        @Html.ActionLink("Modified_Date" , "OperationsGetAllPaged" , Request.QueryString.ToRouteValueDictionary("sortOrder" , ( string ) ViewBag.DateModifiedSortParam))
                                        @Html.SortIdentifier(currentSort , "Modified_Date")
                                    </span>
                                </th>
                                <th>
                                    <span style="text-align: left; " data-toggle="tooltip" data-placement="top" title="" data-original-title="Actions available on selected item">

                                        <span>
                                            Actions
                                        </span><i class="material-icons" style="font-size: 1em; color: purple" , title="Actions">build</i>
                                    </span>
                                </th>
                                @*<th class="filler" style="width: 10%; text-align: center; border: none; border-color: white; border-width: 0px">
                                    </th>*@
                            </tr>
                        </thead>
                        @Html.Partial("Partial/_OperationsPartial" , Model)
                    </table>
                    @if (Model.PageCount > 1)
            {
                        <div class="pager">
                            @Html.PagedListPager(Model , page => Url.Action("OperationsGetAllPaged" , new
                       {
                           page ,
                           sortOrder = ViewBag.currentSort ,
                           currentFilter = ViewBag.currentSearch
                       }))
                            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                        </div>
                    }
                    else
                    {
                        <div><hr /></div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {

    });
</script>
