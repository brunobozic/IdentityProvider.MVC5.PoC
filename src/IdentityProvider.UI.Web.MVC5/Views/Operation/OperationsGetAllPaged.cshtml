@*@model List<IdentityProvider.Controllers.Controllers.OperationVm>*@
@model PagedList.IPagedList<IdentityProvider.Controllers.Controllers.OperationPagedVm>
@using IdentityProvider.UI.Web.MVC5.Extensions
@using PagedList.Mvc;


@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_LayOutBSB.cshtml";

    string currentFilter = ViewBag.CurrentFilter;
    string currentSort = ViewBag.CurrentSort;
    if (string.IsNullOrEmpty(currentSort))
    {
        currentSort = "Created_Date_Desc";
    }
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<h2>Operations</h2>

<div class="wrapper">
    <div class="search-box">
        <form class="form-inline">
            <div class="form-group">
                <input type="text" name="q" value="@ViewBag.searchQuery" class="search-text form-control" placeholder="Search..." />
            </div>
            <button type="submit" class="btn btn-info">Search</button>
        </form>
        @using (Html.BeginForm("OperationsGetAllPaged", "Operation", FormMethod.Get))
        {
            <p>
                Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                <input type="submit" name="q" value="@ViewBag.searchQuery" class="search-text form-control" placeholder="Search..." />
            </p>
        }
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-condensed table-hover">
            <tr>
                <th>
                    @Html.ActionLink("Name", "OperationsGetAllPaged", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.NameSortParam))
                    @Html.SortIdentifier(currentSort, "Name")
                </th>
                <th>
                    @Html.ActionLink("Description", "OperationsGetAllPaged", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.DescriptionSortParam))
                    @Html.SortIdentifier(currentSort, "Description")
                </th>
                <th>
                    @Html.ActionLink("Created_Date", "OperationsGetAllPaged", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.DateCreatedSortParam))
                    @Html.SortIdentifier(currentSort, "Created_Date")
                </th>
                <th>
                    @Html.ActionLink("Modified_Date", "OperationsGetAllPaged", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.DateModifiedSortParam))
                    @Html.SortIdentifier(currentSort, "Modified_Date")
                </th>
            </tr>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Active)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Deleted)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "OperationEdit", new { id = item.Id }) |
                            @Html.ActionLink("Details", "OperationDetails", new { id = item.Id }) |
                            @Html.ActionLink("Delete", "OperationDelete", new { id = item.Id })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @if (Model.PageCount > 1)
    {
        <div class="pager">
            @Html.PagedListPager(Model, page => Url.Action("OperationsGetAllPaged", new
       {
           page, sortOrder = ViewBag.currentSort,q = ViewBag.currentSearch
       }))
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
    }
</div>