@model IdentityProvider.Models.ViewModels.Operations.OperationVm

@Html.Partial("../Shared/CommonInsertItemPartials/_styleSectionPartial")

@Html.Partial("../Shared/CommonInsertItemPartials/_javascriptSectionPartial")

<!-- Custom Css -->
<link href="~/Content/site.css" rel="stylesheet" />
<link href="~/bower_components/pretty-checkbox/dist/pretty-checkbox.css" rel="stylesheet" />

<div class="container-fluid" style="width: 100% !important">
    <div class="row clearfix">
        <div class="card">

            <div class="header cool-text">
                <em style="font-size: 1.7em">
                    Operation
                </em>
                <em style="font-size: 0.9em">
                    <small>Edit an existing operation</small>
                </em>
            </div>

            <div class="body container-fluid" style="width: 100% !important">
                <div class="body">
                    @using (Html.BeginForm("Edit" , "Operation" , FormMethod.Post , new { id = "frmEditItem" , name = "frmEditItem" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true)

                        @Html.HiddenFor(model => model.Operation.Id)
                        @Html.HiddenFor(model => model.Operation.RowVersion)

                        <div class="form-group">
                            <div class="form-line">
                                @Html.EditorFor(item => item.Operation.Name , new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.Operation.Name , "" , new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <div class="form-line">
                                @Html.EditorFor(item => item.Operation.Description , new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.Operation.Description , "" , new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <input type="hidden" name="Active" value="false" />

                            @if (Model.Operation.Active)
                            {
                                <input name="Operation.Active" id="Operation_Active" class="filled-in chk-col-deep-purple" type="checkbox" checked="checked">
                            }
                            else
                            {
                                <input name="Operation.Active" id="Operation_Active" class="" type="checkbox">
                            }


                            <label for="Operation_Active">Active</label>

                        </div>

                        @*<div class="col-sm-3">
                                <div class="demo-switch-title">GREEN</div>
                                <div class="switch">
                                    <label><input type="checkbox" checked=""><span class="lever switch-col-green"></span></label>
                                </div>
                        </div>*@

                        @Html.ValidationMessageFor(model => model.Operation.Active , "" , new { @class = "text-danger" })

                        <div class="form-group">

                            <div class="col-xs-3 p-t-5" id="">
                                <div class="form-group">
                                    <label for="Operation_ActiveFrom">Activated at: </label>
                                    <div class="form-line" id="sandbox-container">
                                        @Html.EditorFor(item => item.Operation.ActiveFrom , new { htmlAttributes = new { @class = "form-control" , @disabled = "disabled" } })
                                        @*<input type="text" class="form-control" id="Operation_ActiveFrom" name="Operation.ActiveFrom">*@
                                    </div>
                                </div>
                            </div>

                            <div class="col-xs-3 p-t-5" id="">
                                <div class="form-group">
                                    <label for="Operation_ActiveTo">Active until: </label>
                                    <div class="form-line" id="sandbox-container">
                                        @Html.EditorFor(item => item.Operation.ActiveTo , new { htmlAttributes = new { @class = "form-control" } })
                                        @*<input type="text" class="form-control" id="Operation_ActiveTo" name="Operation.ActiveTo">*@
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-group col-xs-8 p-t-5">
                            <div class="row m-t-15 m-b--20">
                                <button type="submit" name="btnSubmit" id="btnSubmit" class="btn bg-purple waves-effect btn-xs editDialog" data-toggle="tooltip" data-placement="right" title="" data-original-title="Submit">
                                    <i class="material-icons">edit</i>
                                    <span>
                                        Submit
                                    </span>
                                </button>
                            </div>
                        </div>

                        @*    if (Model.Operation.UserMayViewDeletedProp)
                                {
                                <b>@Html.DisplayNameFor(item => item.Operation.Deleted)</b>

                                if (Model.Operation.Deleted)
                                {
                                <i class="material-icons align-center" style="cursor: not-allowed; color: red" title="Deleted">delete_forever</i>
                                }
                                else
                                {
                                <i class="material-icons align-center" style="cursor: not-allowed; color: darkmagenta" vtitle="Active">check_circle_outline</i>
                                }

                                <b>@Html.DisplayNameFor(item => item.Operation.DateDeleted)</b>

                                if (Model.Operation.DateDeleted != DateTime.MinValue)
                                {
                                @Html.DisplayFor(item => item.Operation.DateDeleted)
                                }

                                <b>@Html.DisplayNameFor(item => item.Operation.DeletedBy)</b>

                                @Html.DisplayFor(item => item.Operation.DeletedBy)
                                }
                                else
                                {
                                // may not view deletion related audit data...

                                <b>@Html.DisplayNameFor(item => item.Operation.Deleted)</b>
                                <b>@Html.DisplayNameFor(item => item.Operation.DateDeleted)</b>
                                <b>@Html.DisplayNameFor(item => item.Operation.DeletedBy)</b>
                                }

                                if (Model.Operation.UserMayViewCreatedProp)
                                {
                                <b>@Html.DisplayNameFor(item => item.Operation.DateCreated)</b>

                                if (Model.Operation.DateCreated != DateTime.MinValue)
                                {
                                @Html.DisplayFor(item => item.Operation.DateCreated)
                                }

                                <b>@Html.DisplayNameFor(item => item.Operation.CreatedBy)</b>

                                @Html.DisplayFor(item => item.Operation.CreatedBy)

                                }
                                else
                                {
                                <b>@Html.DisplayNameFor(item => item.Operation.DateCreated)</b>
                                <b>@Html.DisplayNameFor(item => item.Operation.CreatedBy)</b>
                                }

                                if (Model.Operation.UserMayViewLastModifieddProp)
                                {

                                <b>@Html.DisplayNameFor(item => item.Operation.DateModified)</b>

                                if (Model.Operation.DateModified != DateTime.MinValue)
                                {
                                @Html.DisplayFor(item => item.Operation.DateModified)
                                }

                                <b>@Html.DisplayNameFor(item => item.Operation.ModifiedBy)</b>

                                @Html.DisplayFor(item => item.Operation.ModifiedBy)

                                }
                                else
                                {
                                <b>@Html.DisplayNameFor(item => item.Operation.DateModified)</b>
                                <b>@Html.DisplayNameFor(item => item.Operation.ModifiedBy)</b>

                                }
                            </div>*@


                    }

                    <div id="loading">
                        <p>Loading...</p>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/CommonCRUDScripts/commonSubmitEditForm.js"></script>

<script>

    $(function () {
        $("#xyz").on("change", function () {
            $this = $(this);

            if ($('#defineActiveUntil').is(":checked ")) {
                $("#hiddenSegmentDependantOnCheckbox").show();
            } else {
                $("#hiddenSegmentDependantOnCheckbox").hide();
            }
        });
    });

    $(function () {

        $('#Operation_Active').val(this.checked);

        $('#Operation_Active').change(function () {
            if (this.checked) {
                $(this).prop("checked", true);
            }
            // else { $(this).prop("checked", false); }
            $('#Operation_Active').val(this.checked);
        });
    });

    $("#loading").hide();

    $('#btnSubmit').click(function () {
        $('#frmEditItem').submit();
    });

</script>

@Html.Partial("../Shared/CommonInsertItemPartials/_javascriptSectionBottomPartial")

