@model IdentityProvider.Models.ViewModels.Resources.ResourcePagedVm

@using IdentityProvider.UI.Web.MVC5.Extensions
@using PagedList.Mvc

@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_LayOutBSB.cshtml";

    string currentFilter = ViewBag.CurrentFilter;
    string currentSort = ViewBag.CurrentSort;
    if (string.IsNullOrEmpty(currentSort))
    {
        currentSort = "Created_Date_Desc";
    }
}

<style>
    span label p {
        font-family: "Montserrat", sans-serif;
    }

    .cool-text {
        font-family: "Montserrat", sans-serif;
    }

    table {
        table-layout: auto !important;
        border-collapse: collapse !important;
        width: 100% !important;
    }

        table .absorbing-column {
            width: 100% !important;
        }

        table td {
            white-space: nowrap;
        }

    /*table td:last-child {
        width: 9% !important;
    }*/

    .filler {
    }

    .delete {
    }

    hr {
        display: block;
        position: relative;
        padding: 0px !important;
        margin: 25px auto;
        height: 0;
        width: 80%;
        max-height: 0;
        font-size: 1px;
        line-height: 0;
        clear: both;
        border: none;
        border-top: 1px solid white;
        border-bottom: 1px solid white;
    }

    .js-select2-enabled {
    }
</style>

<script>

    $(document).ready(function () {
        $('#PageSizeList').on('select2:select', function (event) {
            var form = $(event.target).closest("form");;
            form.submit();
        });

        var onAjaxRequestSuccess = function (result) {
            if (result.EnableError) {
                // Setting.
                alert(result.ErrorMsg);
            } else if (result.EnableSuccess) {
                // Setting.
                alert(result.SuccessMsg);
                // Resetting form.
                $('#searchAndPageSizeForm').get(0).reset();
            }
        }
    });

    $(document).ready(function () {
        $('#PageSizeList').select2();
    });

    function deleteOperation(resourceId) {
        swal({
            title: "Are you sure?",
            text: "Are you sure that you want to delete this operation?",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, delete it!",
            confirmButtonColor: "#ec6c62"
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    url: "/Resource/REsourceDeleteAsync/",
                    data:
                    {
                        "resourceToDelete": resourceId
                    },
                    type: "POST",
                    // contentType: "application/json; charset=utf-8",
                    // dataType: "json",
                    success: successFunc,
                    error: errorFunc
                });
                function successFunc(data, status) {

                    swal(
                        'Deleted!',
                        'Your item has been deleted.',
                        'success'
                    );
                }
                function errorFunc() {

                    swal(
                        'Nothing changed!',
                        'Your item has not been deleted.',
                        'failure'
                    );
                }

            } else {
                swal(
                    'Nothing changed!',
                    'Your item has not been deleted.',
                    'failure'
                );
            }
        });
    }


    $(function () {
        $("#mdModal").dialog({
            autoOpen: false,
            modal: true,
            title: "View Details"
        });

        $("#operationsGrid .details").click(function () {
            var Id = $(this).closest("tr").find("td").eq(0).html();
            $.ajax({
                type: "POST",
                url: "/Operations/ResourceDetailsAsync",
                data: '{id: "' + Id + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (response) {
                    $('#dialog').html(response);
                    $('#dialog').dialog('open');
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        });
    });


</script>

<div class="container-fluid">
    <div class="block-header">
    </div>
    <div class="row clearfix">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="card">
                <div class="header cool-text">
                    <em style="font-size: 2.7em">
                        Resources
                    </em>
                    <em style="font-size: 0.9em">
                        <small>Create or delete allowed resources</small>
                    </em>
                </div>
                <div class="body container-fluid">
                    @using (Html.BeginForm("ResourceGetAllPaged", "REsource", FormMethod.Get, new { id = "searchAndPageSizeForm" }))
                    {
                        <div class="col-xs-10">
                            <div class="form-line" style="margin-left: 5px">
                                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = "Search", @value = ViewBag.CurrentFilter, @data_toggle = "tooltip", @data_placement = "top", @title = "", @data_original_title = "Enter search criteria" })
                                @Html.ValidationMessage("Search")
                                <button class="btn bg-purple waves-effect btn-xs" id="submitSearch" style="margin: 1px; margin-bottom: 4px" type="submit" name="submitSearch" data-toggle="tooltip" data-placement="right" title="" data-original-title="Begin search"><i class="material-icons">search</i></button>
                            </div>
                        </div>

                        <div class="col-xs-2">
                            <div class="form-line" style="float: right; margin-right: 5px">
                                @Html.DropDownListFor(m => m.PageSize, Model.PageSizeList, new { id = "PageSizeList", @class = "js-select2-enabled", @style = "padding: 5px; width: 55px" })
                            </div>
                        </div>

                        <div class="body" style="width:100% !important">
                            <table class="table table-striped table-light table-responsive" Id="operationsGrid">
                                <thead>
                                    <tr>
                                        <th>
                                            <span data-toggle="tooltip" data-placement="auto top" title="" data-original-title="Sort by name">
                                                @Html.ActionLink("Name", "ResourceGetAllPaged", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.NameSortParam))
                                                @Html.SortIdentifier(currentSort, "Name")
                                            </span>
                                        </th>
                                        <th>
                                            <span data-toggle="tooltip" data-placement="auto top" title="" data-original-title="Sort by description">
                                                @Html.ActionLink("Description", "ResourceGetAllPaged", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.DescriptionSortParam))
                                                @Html.SortIdentifier(currentSort, "Description")
                                            </span>
                                        </th>
                                        <th>
                                            <span style="text-align: left;" data-toggle="tooltip" data-placement="top" title="" data-original-title="Sort by active status">
                                                @Html.ActionLink("Active", "ResourceGetAllPaged", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.ActiveSortParam))
                                                @Html.SortIdentifier(currentSort, "Active")
                                            </span>
                                        </th>
                                        <th>
                                            <span style="text-align: left" data-toggle="tooltip" data-placement="top" title="" data-original-title="Sort by created date">
                                                @Html.ActionLink("Created_Date", "ResourceGetAllPaged", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.DateCreatedSortParam))
                                                @Html.SortIdentifier(currentSort, "Created_Date")
                                            </span>
                                        </th>
                                        <th>
                                            <span style="text-align: left" data-toggle="tooltip" data-placement="top" title="" data-original-title="Sort by modified date">
                                                @Html.ActionLink("Modified_Date", "ResourceGetAllPaged", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.DateModifiedSortParam))
                                                @Html.SortIdentifier(currentSort, "Modified_Date")
                                            </span>
                                        </th>
                                        <th>
                                            <span style="text-align: left; " data-toggle="tooltip" data-placement="top" title="" data-original-title="Actions available on selected item">

                                                <span>
                                                    Actions
                                                </span><i class="material-icons" style="font-size: 1em; color: purple" , title="Actions">build</i>
                                            </span>
                                        </th>
                                    </tr>
                                </thead>
                                @Html.Partial("Partial/_resourcePartial", Model)
                            </table>
                        </div>
                    }
                </div>
                <div class="footer">
                    @if (Model.Resources.PageCount > 1)
                    {
                        <div class="pager">
                            @Html.PagedListPager(Model.Resources , page => Url.Action("ResourceGetAllPaged", new
                            {
                                page ,
                                sortOrder = Model.SortOrder,
                                currentFilter = Model.SearchString,
                                pageNumber = Model.PageNumber,
                                pageSize = Model.PageSize
                            }))
                            Page @(Model.Resources.PageCount < Model.Resources.PageNumber ? 0 : Model.Resources.PageNumber) of @Model.Resources.PageCount
                        </div>
                    }
                    else
                    {
                        <div><hr /></div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="mdModal" tabindex="-1" role="dialog" style="display: none;">
    <div class="modal-dialog" role="document">
        <div class="modal-content modal-col-grey">
            <div class="modal-header">
                <h4 class="modal-title" id="defaultModalLabel">Modal title</h4>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-link waves-effect"></button>
                <button type="button" class="btn btn-link waves-effect" data-dismiss="modal"></button>
            </div>
        </div>
    </div>
</div>
